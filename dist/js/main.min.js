function isDescendant(e,n){let a=n.parentNode;for(;null!==a;){if(a===e)return!0;a=a.parentNode}return!1}function deactivateCurrentMenuItem(){var e=document.querySelectorAll(".submenu-links-wrapper.expanded"),n=document.querySelectorAll(".submenu-extra-content-wrapper.active"),a=document.querySelectorAll(".submenu-section.active"),t=document.querySelectorAll(".submenu.expanded");if(n)for(var s=0;s<n.length;s++)n[s].classList.remove("active");if(e)for(s=0;s<e.length;s++)e[s].classList.remove("expanded");if(a)for(s=0;s<a.length;s++)a[s].classList.remove("active");if(t)for(s=0;s<t.length;s++)t[s].classList.remove("expanded")}function newsletterSubscribeAction(){let e=document.querySelector("form[id='5063243']");e&&e.addEventListener("submit",(function(n){if(n.preventDefault(),!e.checkValidity())return;let a=new FormData(e);return fetch(e.getAttribute("action"),{method:"POST",body:a}).then((function(e){if(!e.ok)throw new Error("HTTP error "+e.status);document.querySelector(".fe-block-yui_3_17_2_1_1685352218518_7911").style.display="none",document.querySelector(".newsletter-form-wrapper").outerHTML='<div class="quantgov-newsletters-signup-thank-you-section"><h1>Congratulations, you successfully signed up.</h1></div>'})).catch((function(){document.querySelector(".captchaHelp").textContent="Please fill the recaptcha checkbox to subscribe."})),!1}))}document.addEventListener("DOMContentLoaded",(function(){newsletterSubscribeAction();if(document.querySelector(".header-nav")&&(document.querySelector(".header-nav").innerHTML='\n  <nav class="mega-menu">\n        <div class="menu-container">\n            <ul class="menu-items">\n                <li class="submenu-parent">\n                    <a href="#">About</a>\n                    <div class="submenu">\n                        <div class="submenu-links-wrapper">\n                            <div class="submenu-section">\n                                <a class="dropdown-nav-link" href="/about">What is Quantgov</a>\n                            </div>\n                            <div class="submenu-section">\n                                <a class="dropdown-nav-link" href="/our-work-in-action">Our work in action</a>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n\n                <li class="submenu-parent">\n                    <a href="#">Data</a>\n                    <div class="submenu">\n                        <div class="submenu-links-wrapper">\n                            <div class="submenu-section">\n                                <a target="_blank" class="dropdown-nav-link" href="https://www.reghub.ai/data/bulk">CSVs</a>\n                            </div>\n                            <div class="submenu-section">\n                                <a target="_blank" class="dropdown-nav-link" href="https://www.reghub.ai/data/custom">Interactive\n                                    Downloader</a>\n                            </div>\n                            <div class="submenu-section" data-extra-details="submenu-section-apis">\n                                <p class="dropdown-nav-link">API <i class="fas fa-chevron-right"></i></p>\n                            </div>\n                            <div class="submenu-section" data-extra-details="submenu-section-documentation">\n                                <p class="dropdown-nav-link">Documentation <i class="fas fa-chevron-right"></i></p>\n                            </div>\n                        </div>\n\n                        <div class="submenu-extra-content-wrapper">\n                            <div class="submenu-extra-section-item" id="submenu-section-apis">\n                                <p class="style-1">Our API</p>\n                                <ul>\n                                    <li><a target="_blank" href="https://api.quantgov.org/">RegCensus API</a></li>\n                                    <li><a target="_blank" href="https://github.com/QuantGov/regcensus-api-python">Python API\n                                            Package</a></li>\n                                    <li><a target="_blank" href="https://github.com/QuantGov/regcensus-api-client-R">R API Package</a>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div class="submenu-extra-section-item" id="submenu-section-documentation">\n                                <p class="style-1">Guides and Docs</p>\n                                <ul>\n                                    <li><a target="_blank" href="https://www.reghub.ai/guide">User\'s Guide</a></li>\n                                    <li><a href="/documentation">Documentation</a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        \x3c!-- Add more submenu-sections as needed --\x3e\n                    </div>\n                </li>\n                <li><a target="_blank" href="/visuals">Visuals</a></li>\n                <li><a href="/regcensus-explorer">State Snapshots</a></li>\n                <li class="submenu-parent">\n                    <a target="_blank" href="https://www.reghub.ai/">AI-Readable Laws & Rules</a>\n                    <div class="submenu right-menu" style="display: none;">\n                        <div class="submenu-links-wrapper">\n                            <div class="submenu-section">\n                                <p class="style-1">Do more with QuantGov</p>\n                                <p class="misc">\n                                    Access pre-compiled downloads of cleaned text files and metadata. Or create your own\n                                    customized download of documents and data from tens of millions of legal documents\n                                    from around the world.\n                                </p>\n\n                                <div class="text-center">\n                                    <a class="btn-primary margin-top-50" href="#">Login for full access</a>\n                                    <a href="#" class="btn-secondary margin-top-25">Don\'t have an account? Sign up.</a>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="submenu-extra-content-wrapper">\n                            <div class="submenu-extra-section-item" id="submenu-section-apis">\n                                <p class="style-1">Our API</p>\n                                <ul>\n                                    <li><a target="_blank" href="https://api.quantgov.org/">RegCensus API</a></li>\n                                    <li><a target="_blank" href="https://github.com/QuantGov/regcensus-api-python">Python API\n                                            Package</a></li>\n                                    <li><a target="_blank" href="https://github.com/QuantGov/regcensus-api-client-R">R API Package</a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n                <li class="submenu-parent">\n                    <a href="#">Get Involved</a>\n                    <div class="submenu right-menu">\n                        <div class="submenu-links-wrapper">\n                            <div class="submenu-section" data-extra-details="submenu-section-join-research">\n                                <p class="dropdown-nav-link">Join Our Research <i class="fas fa-chevron-right"></i></p>\n                            </div>\n                            <div class="submenu-section" data-extra-details="submenu-section-learn-nlp">\n                                <p class="dropdown-nav-link">Learn Natural Language Processing <i class="fas fa-chevron-right"></i></p>\n                            </div>\n                        </div>\n\n                        <div class="submenu-extra-content-wrapper">\n                            <div class="submenu-extra-section-item" id="submenu-section-join-research">\n                                <p class="style-1">Policy Analytics Research Program</p>\n                                <div class="misc">\n                                    Cultivating research at the intersection of the social sciences, technology, and public policy.\n                                </div>\n                                <ul>\n                                    <li><a href="/policy-analytics-program">Program Overview</a></li>\n                                    <li><a href="/policy-research-program">Student Application</a></li>\n                                    <li><a href="/research-proposals">Research Proposal Application</a>\n                                    </li>\n                                </ul>\n                            </div>\n\n                            <div class="submenu-extra-section-item" id="submenu-section-learn-nlp">\n                                <p class="style-1">How to use the platform</p>\n                                <ul>\n                                    <li><a target="_blank" href="https://quantgov.github.io/quantgov-tutorial/pages/intro.html">Platform Tutorial</a></li>\n                                    <li><a target="_blank" href="https://quantgov-website-files.s3.amazonaws.com/file-backup/QuantGov-An-Overview.pdf">Platform Overview</a></li>\n                                    <li><a target="_blank" href="https://github.com/QuantGov/quantgov">GitHub Repository</a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        \x3c!-- Add more submenu-sections as needed --\x3e\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </nav>\n',document.querySelector(".header-nav").style.display="block"),document.querySelector(".header-menu-nav-list")){const e=document.createElement("div");e.innerHTML='\n<nav class="mega-menu">\n    <div class="menu-container">\n        <ul class="menu-items">\n            <li>\n                <a class="" href="#">About <i class="fas fa-chevron-right"></i></a>\n\n                <ul class="submenu-section">\n                    <li>\n                        <a class="" href="/about">What is Quantgov</a>\n                    </li>\n                    <li>\n                        <a class="" href="/our-work-in-action">Our work in action</a>\n                    </li>\n                </ul>\n            </li>\n\n            <li>\n                <a class="" href="#">Data <i class="fas fa-chevron-right"></i></a>\n                <ul class="submenu-links-wrapper">\n                    <li class="submenu-section">\n                        <a class="" href="https://www.reghub.ai/data/bulk">CSVs</a>\n                    </li>\n                    <li class="submenu-section">\n                        <a class="" href="https://www.reghub.ai/data/custom">Interactive Downloader</a>\n                    </li>\n                    <li class="submenu-section" data-extra-details="submenu-section-apis">\n                        <a href="#" class="">API <i class="fas fa-chevron-right"></i></a>\n                        <ul class="submenu-extra-section-item">\n                            <li><a target="_blank" href="https://api.quantgov.org/">RegCensus API</a></li>\n                            <li><a target="_blank" href="https://github.com/QuantGov/regcensus-api-python">Python API Package</a></li>\n                            <li><a target="_blank" href="https://github.com/QuantGov/regcensus-api-client-R">R API Package</a></li>\n\n                        </ul>\n                    </li>\n                    <li class="submenu-section" data-extra-details="submenu-section-documentation">\n                        <a href="#" class="">Documentation <i class="fas fa-chevron-right"></i></a>\n                        <ul class="submenu-extra-section-item">\n                            <li><a target="_blank" href="https://www.reghub.ai/guide">User\'s Guide</a></li>\n                            <li><a href="/documentation">Documentation</a></li>\n                        </ul>\n                    </li>\n                </ul>\n            </li>\n\n            <li><a href="/visuals">Visuals</a></li>\n            <li><a href="/regcensus-explorer">State Snapshots</a></li>\n            <li>\n                <a target="_blank" href="https://www.reghub.ai/">AI-Readable Laws & Rules</a>\n            </li>\n\n            <li>\n                <a class="" href="#">Get Involved <i class="fas fa-chevron-right"></i></a>\n\n                <ul class="submenu-links-wrapper">\n                    <li class="submenu-section" data-extra-details="submenu-section-join-research">\n                        <a href="#" class="">Join Our Research <i class="fas fa-chevron-right"></i></a>\n                        <ul class="submenu-extra-section-item" id="submenu-section-join-research">\n                            <li><a href="/policy-analytics-program">Program Overview</a></li>\n                            <li><a href="/policy-research-program">Student Application</a></li>\n                            <li><a href="/research-proposals">Research Proposal Application</a></li>\n                        </ul>\n                    </li>\n                    <li class="submenu-section" data-extra-details="submenu-section-learn-nlp">\n                        <a href="#" class="">Learn Natural Language Processing <i class="fas fa-chevron-right"></i></a>\n                        <ul class="submenu-extra-section-item" id="submenu-section-learn-nlp">\n                            <li><a target="_blank" href="https://quantgov.github.io/quantgov-tutorial/pages/intro.html">Platform\n                                    Tutorial</a></li>\n                            <li><a\n                                    href="https://quantgov-website-files.s3.amazonaws.com/file-backup/QuantGov-An-Overview.pdf">Platform\n                                    Overview</a></li>\n                            <li><a target="_blank" href="https://github.com/QuantGov/quantgov">GitHub Repository</a></li>\n                        </ul>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n</nav>\n  ';const n=e.querySelector(".menu-container").innerHTML;document.querySelector(".header-menu-nav-list").innerHTML=n}var e=document.querySelectorAll(".mega-menu .submenu-section");for(var n=0;n<e.length;n++)e[n].addEventListener("mouseenter",(function(n){deactivateCurrentMenuItem();for(var a=n.currentTarget.getAttribute("data-extra-details"),t=0;t<e.length;t++)e[t].getAttribute("data-extra-details")!==a&&e[t].classList.remove("active");n.currentTarget.classList.add("active");for(var s=document.querySelectorAll(".submenu-extra-section-item"),i=0;i<s.length;i++)s[i].id!==a&&s[i].classList.remove("active");var l=document.getElementById(a);if(l&&l.classList.add("active"),l&&l.classList.contains("active")&&n.currentTarget.getAttribute("data-extra-details")){var r=n.currentTarget.closest(".submenu-links-wrapper"),u=n.currentTarget.closest(".submenu").querySelectorAll(".submenu-extra-content-wrapper")[0];u&&u.classList.add("active"),r&&r.classList.add("expanded"),n.currentTarget.closest(".submenu")&&n.currentTarget.closest(".submenu").classList.add("expanded")}else deactivateCurrentMenuItem()})),e[n].addEventListener("mouseleave",(function(e){}));document.querySelectorAll("nav.header-menu-nav-list > ul li a").forEach((e=>{e.addEventListener("click",(function(n){const a=e.nextElementSibling;if(a&&"UL"===a.tagName){n.preventDefault();const a=e.closest("li");a&&a.classList.toggle("expanded")}}))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
